"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/pYvLECH4ojt
 */

import React, { useEffect, useState } from "react";
import Link from "next/link";
import {
  CardTitle,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";

export function Packages({ accountAddress, packages }) {
  const [formattedPackages, setFormattedPackages] = useState([]);
  const [isItemLoading, setIsItemLoading] = useState("");

  useEffect(() => {
    const newPackages = packages.map((pkg) => {
      pkg.key = `${pkg.amount}-${pkg.buyUrl}`;
      if (pkg.currency) {
        pkg.formattedAmount = formatCurrency(
          pkg.amount,
          pkg.currency,
          navigator.language
        );
        pkg.fees = formatCurrency(
          0.25 + 0.015 * pkg.amount,
          pkg.currency,
          navigator.language
        );
      }
      pkg.buyUrl += `?accountAddress=${accountAddress}`;
      return pkg;
    });
    setFormattedPackages(newPackages);
  }, [packages, accountAddress]);

  function formatCurrency(amount, currency, locale) {
    return new Intl.NumberFormat(locale || "en-US", {
      style: "currency",
      currency,
    }).format(amount);
  }

  const handleClick = (itemId) => {
    setIsItemLoading(itemId);
  };
  // console.log(
  //   ">>> rendering packages for accountAddress",
  //   accountAddress,
  //   formattedPackages
  // );
  return (
    <main className="flex flex-col items-center p-4">
      {formattedPackages.map((pkg) => (
        <Card className="w-full max-w-md mb-6" key={pkg.key}>
          <CardHeader>
            <CardTitle>
              {pkg.amount} {pkg.name}
            </CardTitle>
            <div className="text-sm text-gray-500">{pkg.formattedFxRate}</div>
          </CardHeader>
          <CardContent className="flex justify-between items-center">
            <div className="text-xl font-semibold">{pkg.formattedAmount}</div>
            {pkg.fees && (
              <div className="text-sm text-gray-500">
                +{pkg.fees} (Stripe fees)
              </div>
            )}
          </CardContent>
          <CardFooter>
            {pkg.key != isItemLoading ? (
              <Link
                className="border border-gray-300 rounded-md p-3 dark:border-gray-600 block text-center py-2"
                href={pkg.buyUrl}
                onClick={() => handleClick(pkg.key)}
              >
                {pkg.buyUrl.match(/\/topup/) ? "Top Up" : "Buy Now"}
              </Link>
            ) : (
              <Button
                className="border border-gray-300 rounded-md p-3 dark:border-gray-600 block text-center py-2"
                disabled
              >
                Processing...
              </Button>
            )}
          </CardFooter>
        </Card>
      ))}
    </main>
  );
}
